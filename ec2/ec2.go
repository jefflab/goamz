package ec2

type EC2 interface {
	AttachVolume(volumeId string, instanceId string, device string) (resp *AttachVolumeResp, err error)
	AuthorizeSecurityGroup(group SecurityGroup, perms []IPPerm) (resp *SimpleResp, err error)
	CopyImage(options *CopyImage) (resp *CopyImageResp, err error)
	CreateImage(options *CreateImage) (resp *CreateImageResp, err error)
	CreateKeyPair(keyName string) (resp *CreateKeyPairResp, err error)
	CreateSecurityGroup(group SecurityGroup) (resp *CreateSecurityGroupResp, err error)
	CreateSnapshot(volumeId, description string) (resp *CreateSnapshotResp, err error)
	CreateTags(resourceIds []string, tags []Tag) (resp *SimpleResp, err error)
	CreateVolume(options *CreateVolume) (resp *CreateVolumeResp, err error)
	DeleteKeyPair(name string) (resp *SimpleResp, err error)
	DeleteSecurityGroup(group SecurityGroup) (resp *SimpleResp, err error)
	DeleteSnapshots(ids []string) (resp *SimpleResp, err error)
	DeleteVolume(id string) (resp *SimpleResp, err error)
	DeregisterImage(imageId string) (resp *DeregisterImageResp, err error)
	DetachVolume(id string) (resp *SimpleResp, err error)
	ImageAttribute(imageId, attribute string) (resp *ImageAttributeResp, err error)
	Images(ids []string, filter *Filter) (resp *ImagesResp, err error)
	Instances(instIds []string, filter *Filter) (resp *InstancesResp, err error)
	ModifyImageAttribute(imageId string, options *ModifyImageAttribute) (resp *SimpleResp, err error)
	RebootInstances(ids ...string) (resp *SimpleResp, err error)
	RegisterImage(options *RegisterImage) (resp *RegisterImageResp, err error)
	RevokeSecurityGroup(group SecurityGroup, perms []IPPerm) (resp *SimpleResp, err error)
	RunInstances(options *RunInstances) (resp *RunInstancesResp, err error)
	SecurityGroups(groups []SecurityGroup, filter *Filter) (resp *SecurityGroupsResp, err error)
	Snapshots(ids []string, filter *Filter) (resp *SnapshotsResp, err error)
	StartInstances(ids ...string) (resp *StartInstanceResp, err error)
	StopInstances(ids ...string) (resp *StopInstanceResp, err error)
	TerminateInstances(instIds []string) (resp *TerminateInstancesResp, err error)
	Volumes(volIds []string, filter *Filter) (resp *VolumesResp, err error)
}